/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.vidanec.zavrsnirad.view;

import com.github.lgooddatepicker.components.DatePickerSettings;
import hr.vidanec.zavrsnirad.controller.ObradaKnjiga;
import hr.vidanec.zavrsnirad.controller.ObradaOsoba;
import hr.vidanec.zavrsnirad.controller.ObradaPosudbaKnjige;
import hr.vidanec.zavrsnirad.model.Knjiga;
import hr.vidanec.zavrsnirad.model.Osoba;
import hr.vidanec.zavrsnirad.model.PosudbaKnjige;
import hr.vidanec.zavrsnirad.utility.ZavrsniRadException;
import java.awt.event.KeyEvent;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author Ivan
 */
public class PosudbeKnjiga extends javax.swing.JFrame {

    private ObradaPosudbaKnjige obrada;
    private ObradaKnjiga obradaKnjiga;
    private PosudbaKnjige entitet;
    /**
     * Creates new form PosudbeKnjiga
     */
    public PosudbeKnjiga() {
        initComponents();
        setTitle("Posudbe knjiga");
        obrada = new ObradaPosudbaKnjige();
        obradaKnjiga = new ObradaKnjiga();
        ucitajPodatke();
        
        DefaultComboBoxModel<Osoba> mo = new DefaultComboBoxModel<>();
        new ObradaOsoba().getPodaci().forEach(o -> {mo.addElement(o);
        });
        cmbOsobe.setModel(mo);
        
        DatePickerSettings dps = new DatePickerSettings(new Locale("hr", "HR"));
        dps.setFormatForDatesCommonEra("dd.MM.yyyy");
        dpiDatumPosudbe.setSettings(dps);
        
        DatePickerSettings dps2 = new DatePickerSettings(new Locale("hr", "HR"));
        dps2.setFormatForDatesCommonEra("dd.MM.yyyy");
        dpiDatumPovratka.setSettings(dps2);
        
        lstKnjigeNaPosudbi.setCellRenderer(new KnjigaCellRenderer());
        lstKnjigeUBazi.setCellRenderer(new KnjigaCellRenderer());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstPodaci = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dpiDatumPosudbe = new com.github.lgooddatepicker.components.DatePicker();
        jLabel2 = new javax.swing.JLabel();
        dpiDatumPovratka = new com.github.lgooddatepicker.components.DatePicker();
        jLabel3 = new javax.swing.JLabel();
        btnDodaj = new javax.swing.JButton();
        btnPromjeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        lblPoruka = new javax.swing.JLabel();
        cmbOsobe = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        txtUvjet = new javax.swing.JTextField();
        btnTrazi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstKnjigeUBazi = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstKnjigeNaPosudbi = new javax.swing.JList<>();
        btnObrisiKnjiguIzPosudbe = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnDodajKnjiguUPosudbu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lstPodaci.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstPodaci.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPodaciValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstPodaci);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Podaci"));

        jLabel1.setText("Datum posudbe");

        jLabel2.setText("Datum povratka");

        jLabel3.setText("Osoba");

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnPromjeni.setText("Promjeni");
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPoruka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(dpiDatumPovratka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnDodaj)
                                .addGap(14, 14, 14)
                                .addComponent(btnPromjeni)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnObrisi))
                            .addComponent(cmbOsobe, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dpiDatumPosudbe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(cmbOsobe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dpiDatumPosudbe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(dpiDatumPovratka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPoruka, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi)
                    .addComponent(btnPromjeni))
                .addGap(4, 4, 4))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Knjige"));

        txtUvjet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUvjetKeyReleased(evt);
            }
        });

        btnTrazi.setText("T");
        btnTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraziActionPerformed(evt);
            }
        });

        lstKnjigeUBazi.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstKnjigeUBaziValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstKnjigeUBazi);

        lstKnjigeNaPosudbi.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstKnjigeNaPosudbiValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstKnjigeNaPosudbi);

        btnObrisiKnjiguIzPosudbe.setText("<<");
        btnObrisiKnjiguIzPosudbe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiKnjiguIzPosudbeActionPerformed(evt);
            }
        });

        jLabel4.setText("Knjige u bazi");

        jLabel5.setText("Knjige na posudbi");

        btnDodajKnjiguUPosudbu.setText(">>");
        btnDodajKnjiguUPosudbu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajKnjiguUPosudbuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addGap(0, 125, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDodajKnjiguUPosudbu, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                            .addComponent(btnObrisiKnjiguIzPosudbe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDodajKnjiguUPosudbu)
                        .addGap(75, 75, 75)
                        .addComponent(btnObrisiKnjiguIzPosudbe)
                        .addGap(61, 61, 61))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstPodaciValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPodaciValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        
        entitet = lstPodaci.getSelectedValue();
        if (entitet == null) {
            return;
        }
        
        DefaultComboBoxModel<Osoba> mo = (DefaultComboBoxModel<Osoba>) cmbOsobe.getModel();
        for (int i = 0; i < mo.getSize(); i++) {
            if (mo.getElementAt(i).getId().equals(entitet.getOsoba().getId())) {
                cmbOsobe.setSelectedIndex(i);
                break;
            }
        }
        if(entitet.getDatum_posudbe()!=null){
        dpiDatumPosudbe.setDate(entitet.getDatum_posudbe().toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate());
        }
        if(entitet.getDatum_povratka()==null) {
            dpiDatumPovratka.setText("");
        }
        if(entitet.getDatum_povratka()!=null){
        dpiDatumPovratka.setDate(entitet.getDatum_povratka().toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate());
        }
        
        DefaultListModel<Knjiga> m = new DefaultListModel<>();
        for(Knjiga k : entitet.getKnjige()){
            m.addElement(k);
        }
        lstKnjigeNaPosudbi.setModel(m);
    }//GEN-LAST:event_lstPodaciValueChanged

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        entitet = new PosudbaKnjige();
        
        postaviVrijednostiUEntitet();

        
        
        try {
            obrada.create();
            ucitajPodatke();
            ocistiPolja();
        } catch (ZavrsniRadException ex) {
            lblPoruka.setText(ex.getPoruka());
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed
        entitet = lstPodaci.getSelectedValue();
        if(entitet==null){
            return;
        }

        postaviVrijednostiUEntitet();

        try {
            obrada.update();
            ucitajPodatke();
            ocistiPolja();
        } catch (ZavrsniRadException e) {
            lblPoruka.setText(e.getPoruka());
        }
    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        entitet = lstPodaci.getSelectedValue();
        if (entitet == null) {
            return;
        }

        obrada.setEntitet(entitet);

        try {
            obrada.delete();
            ucitajPodatke();
            ocistiPolja();
        } catch (ZavrsniRadException e) {
            lblPoruka.setText(e.getPoruka());
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void txtUvjetKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUvjetKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ucitajKnjige();
        }
    }//GEN-LAST:event_txtUvjetKeyReleased

    private void btnTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraziActionPerformed
        ucitajKnjige();
    }//GEN-LAST:event_btnTraziActionPerformed

    private void btnDodajKnjiguUPosudbuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajKnjiguUPosudbuActionPerformed
        DefaultListModel<Knjiga> m;
        try {
            m= (DefaultListModel<Knjiga>) lstKnjigeNaPosudbi.getModel();
            m.get(0).toString();
        } catch (Exception e) {
            m=new DefaultListModel<>();
            lstKnjigeNaPosudbi.setModel(m);
        }
        boolean postoji;
        for(Knjiga k : lstKnjigeUBazi.getSelectedValuesList()){
            postoji=false;
            for(int i=0;i<m.size();i++){
                if(k.getId().equals(m.get(i).getId())){
                    postoji=true;
                    break;
                }
            }
            if(!postoji){
                 m.addElement(k);
            }
          
       }
        lstKnjigeNaPosudbi.repaint();
    }//GEN-LAST:event_btnDodajKnjiguUPosudbuActionPerformed

    private void lstKnjigeUBaziValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstKnjigeUBaziValueChanged
        
    }//GEN-LAST:event_lstKnjigeUBaziValueChanged

    private void lstKnjigeNaPosudbiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstKnjigeNaPosudbiValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lstKnjigeNaPosudbiValueChanged

    private void btnObrisiKnjiguIzPosudbeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiKnjiguIzPosudbeActionPerformed
        DefaultListModel<Knjiga> m;
        
        try {
            m = (DefaultListModel<Knjiga>) lstKnjigeNaPosudbi.getModel();
        } catch (Exception e) {
            return;
        }
        
        for(Knjiga k : lstKnjigeNaPosudbi.getSelectedValuesList()) {
            for (int i = 0; i < m.size(); i++) {
                if (k.getId().equals(m.getElementAt(i).getId())) {
                    m.removeElementAt(i);
                    break;
                }
            }
        }
        lstKnjigeNaPosudbi.repaint();
    }//GEN-LAST:event_btnObrisiKnjiguIzPosudbeActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnDodajKnjiguUPosudbu;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnObrisiKnjiguIzPosudbe;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JButton btnTrazi;
    private javax.swing.JComboBox<Osoba> cmbOsobe;
    private com.github.lgooddatepicker.components.DatePicker dpiDatumPosudbe;
    private com.github.lgooddatepicker.components.DatePicker dpiDatumPovratka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblPoruka;
    private javax.swing.JList<Knjiga> lstKnjigeNaPosudbi;
    private javax.swing.JList<Knjiga> lstKnjigeUBazi;
    private javax.swing.JList<PosudbaKnjige> lstPodaci;
    private javax.swing.JTextField txtUvjet;
    // End of variables declaration//GEN-END:variables

    private void ucitajPodatke() {
        DefaultListModel<PosudbaKnjige> m = new DefaultListModel<>();

        
        obrada.getPodaci().forEach(s -> m.addElement(s));

        lstPodaci.setModel(m);
    }

    private void postaviVrijednostiUEntitet() {
        entitet.setOsoba((Osoba) cmbOsobe.getSelectedItem());
        
        if(dpiDatumPosudbe.getDate()!=null){
        entitet.setDatum_posudbe(Date.from(dpiDatumPosudbe.getDate().atStartOfDay()
                .atZone(ZoneId.systemDefault())
                .toInstant()));
        }
        
        
        if(dpiDatumPovratka.getDate()!=null){
        entitet.setDatum_povratka(Date.from(dpiDatumPovratka.getDate().atStartOfDay()
            .atZone(ZoneId.systemDefault())
            .toInstant()));
        }
        
         
         try {
            entitet.setKnjige(new ArrayList<>());
        DefaultListModel<Knjiga> m = (DefaultListModel<Knjiga>) lstKnjigeNaPosudbi.getModel();
        for(int i=0;i<m.size();i++) {
            entitet.getKnjige().add(m.getElementAt(i));
        }
        } catch (Exception e) {
            
        }
        
        obrada.setEntitet(entitet);
    }

    private void ocistiPolja() {
        
        lblPoruka.setText("");
        dpiDatumPovratka.setText("");
        
    }

    private void ucitajKnjige() {
        DefaultListModel<Knjiga> m = new DefaultListModel<>();
        
        obradaKnjiga.getPodaci(txtUvjet.getText()).forEach(s -> m.addElement(s));
        
        lstKnjigeUBazi.setModel(m);
    }

    
}
